{"ast":null,"code":"var _jsxFileName = \"/home/amine/Desktop/Projects/FSO/part1_exo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Statistics = props => {\n  if (props.data.good == 0 && props.data.neutral == 0 && props.data.bad == 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.data.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.data.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.data.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", props.data.all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", props.data.average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", props.data.positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const data = {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    all: all,\n    average: average,\n    positive: positive\n  };\n  const handlerGood = () => {\n    setGood(good + 1);\n    setAll(good + bad + neutral + 1);\n    setAverage((good + 1 - bad) / (good + bad + neutral + 1));\n    setPositive((good + 1) / (good + bad + neutral + 1) * 100);\n  };\n  const handlerNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(good + bad + neutral + 1);\n    setAverage((good - bad) / (good + bad + neutral + 1));\n    setPositive(good / (good + bad + neutral + 1) * 100);\n  };\n  const handlerBad = () => {\n    setBad(bad + 1);\n    setAll(good + bad + neutral + 1);\n    setAverage((good - bad - 1) / (good + bad + neutral + 1));\n    setPositive(good / (good + bad + neutral + 1) * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"five feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handlerGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handlerNeutral,\n      text: \"neutra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handlerBad,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4gnNStmv2er021Bn8O2GURCE9pg=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","props","data","good","neutral","bad","all","average","positive","_c2","App","_s","setGood","setNeutral","setBad","setAll","setAverage","setPositive","handlerGood","handlerNeutral","handlerBad","_c3","$RefreshReg$"],"sources":["/home/amine/Desktop/Projects/FSO/part1_exo/src/App.js"],"sourcesContent":["import {useState} from 'react'\n\nconst Button = ({handleClick, text}) => {\n\treturn (\n\t\t<button onClick={handleClick}>{text}</button>\n\t)\n\n}\n\nconst Statistics = (props) => {\n\tif(props.data.good == 0 && props.data.neutral == 0 && props.data.bad == 0) \n\treturn (<div><p>No feedback given</p></div>)\n\n\treturn (\n\t\t<div>\n\t\t\t<p>good {props.data.good}</p>\n\t\t\t<p>neutral {props.data.neutral}</p>\n\t\t\t<p>bad {props.data.bad}</p>\n\t\t\t<p>all {props.data.all}</p>\n\t\t\t<p>average {props.data.average}</p>\n\t\t\t<p>positive {props.data.positive} %</p>\n\t\t</div>\n\n\t)\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const data = {good: good, \n\tneutral: neutral, \n\tbad: bad, \n\tall: all, \n\taverage: average, \n\tpositive: positive}\n\n  const handlerGood = () => {\n\tsetGood(good+1)\n\tsetAll(good+bad+neutral+1)\n\tsetAverage((good+1-bad)/(good+bad+neutral+1))\n\tsetPositive((good+1)/(good+bad+neutral+1)*100)\n}\n  const handlerNeutral = () => {\n\tsetNeutral(neutral+1)\n\tsetAll(good+bad+neutral+1)\n\tsetAverage((good-bad)/(good+bad+neutral+1))\n\tsetPositive((good)/(good+bad+neutral+1)*100)\n}\n  const handlerBad = () => {\n\tsetBad(bad+1)\n\tsetAll(good+bad+neutral+1)\n\tsetAverage((good-bad-1)/(good+bad+neutral+1))\n\tsetPositive((good)/(good+bad+neutral+1)*100)\n}\n\n\n  return (\n    <div>\n\t\t<h1>five feedback</h1>\n\t\t<Button handleClick={handlerGood} text='good'/>\n\t\t<Button handleClick={handlerNeutral} text='neutra'/>\n\t\t<Button handleClick={handlerBad} text='good'/>\n\t\t\n\t\t<button onClick={handlerNeutral}>neutral</button>\n\t\t<button onClick={handlerBad}>bad</button>\n\n\t\t<h1>Statistics</h1>\n\n\t\t<Statistics data={data}/>\n\n\t\n\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}